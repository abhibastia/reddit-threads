[reddit]
client_id = d8hsLwa0_fTvEFeQI9MmpQ
client_secret = KRHZTrn9Gu9z638KjTxCEIS2x6HHpw
user_agent = Read thread using reddit api
subreddit = dataengineering
columns = subreddit,author,title,downs,ups,score,selftext_html,num_comments,created_utc

[transformation]
date_column = created_utc

[schema]
author = object
title = object
downs = int64
ups = int64
score = int64
selftext_html = object
num_comments = int64
created_utc = float64
created_datetime = datetime64[ns]
created_date = object
day = object
month = object
week_of_year = UInt32
stored_at = datetime64[us]

[default_values]
author = UnknownAuthor
title = NoTitle
downs = 0
ups = 0
score = 0
selftext_html = NoContent
num_comments = 0


[duckdb]
connection_string = reddit_threads.duckdb
table_name = reddit_posts

[logging]
level = INFO

[queries]
avg_number_of_threads_by_day_of_week = SELECT day,ROUND(COUNT(*)/COUNT(DISTINCT created_date),2) AS average_threads FROM reddit_posts GROUP BY day;
highest_engagement = SELECT author, title, ups, downs, num_comments FROM reddit_posts ORDER BY ups + downs + num_comments DESC LIMIT 1;
# no post found with downs > 0 in reddit posts, so there will not be any records
most_controversial = SELECT title, author, ups, downs, ROUND((ups * downs) / (ups + downs),2) AS controversial_score FROM reddit_posts WHERE downs > 0 ORDER BY controversial_score DESC LIMIT 1;